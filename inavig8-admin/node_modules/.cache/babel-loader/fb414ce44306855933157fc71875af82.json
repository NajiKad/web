{"ast":null,"code":"var _jsxFileName = \"/Users/valdyn/Dropbox/inavig8-admin/src/components/toolbar.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Konva from 'konva';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container, Row, Col } from 'react-bootstrap'; // import 'font-awesome/css/font-awesome.min.css';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faCoffee } from '@fortawesome/free-solid-svg-icons'\n// import '@fortawesome/fontawesome-svg-core/styles.css' // Import the CSS\n// import { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\n\nclass ToolBar extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDragStart = e => {\n      e.target.setAttrs({\n        shadowOffset: {\n          x: 5,\n          y: 5\n        },\n        scaleX: 1.1,\n        scaleY: 1.1\n      });\n    };\n\n    this.handleDragEnd = e => {\n      e.target.to({\n        duration: 0.5,\n        easing: Konva.Easings.ElasticEaseOut,\n        scaleX: 1,\n        scaleY: 1,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0\n      });\n    };\n  }\n\n  render() {\n    // const element = <FontAwesomeIcon icon={faCoffee} />\n    // ReactDOM.render(element, document.body)\n    return React.createElement(Layer, {\n      className: \"toolbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Rect, {\n      x: 10,\n      y: 30,\n      width: 120,\n      height: 650,\n      fill: \"white\",\n      stroke: \"lightgrey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Text, {\n      x: 10,\n      y: 170,\n      fontFamily: \"FontAwesome\",\n      text: '\\uf0f4',\n      fontSize: 30,\n      draggable: true,\n      fill: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Text, {\n      x: 10,\n      y: 210,\n      fontFamily: \"FontAwesome\",\n      text: '\\uf0f4',\n      fontSize: 30,\n      draggable: true,\n      fill: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Rect, {\n      x: 20,\n      y: 50,\n      width: 40,\n      height: 40,\n      fill: \"lightgrey\",\n      shadowBlur: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Rect, {\n      x: 20,\n      y: 50,\n      width: 40,\n      height: 40,\n      fill: \"lightgrey\",\n      draggable: true,\n      onDragStart: this.handleDragStart,\n      onDragEnd: this.handleDragEnd,\n      shadowBlur: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      x: 100,\n      y: 70,\n      radius: 20,\n      fill: \"lightgrey\",\n      shadowBlur: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(Circle, {\n      x: 100,\n      y: 70,\n      radius: 20,\n      fill: \"lightgrey\",\n      draggable: true,\n      onDragStart: this.handleDragStart,\n      onDragEnd: this.handleDragEnd,\n      shadowBlur: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ToolBar;","map":{"version":3,"sources":["/Users/valdyn/Dropbox/inavig8-admin/src/components/toolbar.js"],"names":["React","Component","ReactDOM","Konva","render","Stage","Layer","Rect","Text","Circle","Line","Navbar","Nav","NavDropdown","Form","FormControl","Button","Container","Row","Col","FontAwesomeIcon","faCoffee","ToolBar","handleDragStart","e","target","setAttrs","shadowOffset","x","y","scaleX","scaleY","handleDragEnd","to","duration","easing","Easings","ElasticEaseOut","shadowOffsetX","shadowOffsetY"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport Konva from 'konva';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Rect, Text, Circle, Line } from 'react-konva';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Button, Container, Row, Col } from 'react-bootstrap';\n// import 'font-awesome/css/font-awesome.min.css';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faCoffee } from '@fortawesome/free-solid-svg-icons'\n// import '@fortawesome/fontawesome-svg-core/styles.css' // Import the CSS\n// import { faThumbsUp } from '@fortawesome/free-solid-svg-icons'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\n\n\nclass ToolBar extends Component {\n  // componentDidMount() {\n  //   // force redraw after a timeout\n  //   // to make sure that the font is loaded\n  //   // setTimeout is just for demo\n  //   // it is better to use some font observer\n  //   setTimeout(() => {\n  //     this.layer.draw();\n  //   }, 2000);\n  // }\n  handleDragStart = e => {\n    e.target.setAttrs({\n      shadowOffset: {\n        x: 5,\n        y: 5\n      },\n      scaleX: 1.1,\n      scaleY: 1.1\n    });\n  };\n  handleDragEnd = e => {\n    e.target.to({\n      duration: 0.5,\n      easing: Konva.Easings.ElasticEaseOut,\n      scaleX: 1,\n      scaleY: 1,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0\n    });\n  };\n\n  render() {\n\n    // const element = <FontAwesomeIcon icon={faCoffee} />\n    // ReactDOM.render(element, document.body)\n\n    return (\n    <Layer className='toolbar'>\n                {/* <Portal>\n            <input\n              style={{\n                position: 'absolute',\n                top: 10,\n                left: 10,\n                width: '200px'\n              }}\n              placeholder=\"DOM input from Konva nodes\"\n            />\n          </Portal> */}\n  {/* <Button variant=\"primary\"><Text text=\"Try click on rect\" /></Button> */}\n    <Rect\n      x={10}\n      y={30}\n      width={120}\n      height={650}\n      fill=\"white\"\n      stroke=\"lightgrey\"\n    />\n            <Text\n            x={10}\n            y={170}\n            fontFamily=\"FontAwesome\"\n            text={'\\uf0f4'}\n            fontSize={30}\n            draggable\n            fill=\"black\"\n        />\n                    <Text\n            x={10}\n            y={210}\n            fontFamily=\"FontAwesome\"\n            text={'\\uf0f4'}\n            fontSize={30}\n            draggable\n            fill=\"black\"\n        />\n  {/* <Text text={'\\uf0f4'} draggable fontSize={12} /> */}\n  <Rect\n    x={20}\n    y={50}\n    width={40}\n    height={40}\n    fill=\"lightgrey\"\n    shadowBlur={1}\n  />\n\n  <Rect\n    x={20}\n    y={50}\n    width={40}\n    height={40}\n    fill=\"lightgrey\"\n    draggable\n    onDragStart={this.handleDragStart}\n    onDragEnd={this.handleDragEnd}\n    shadowBlur={1}\n  />\n\n  <Circle x={100} y={70} radius={20} fill=\"lightgrey\" shadowBlur={1} />\n  <Circle \n    x={100} y={70} \n    radius={20} fill=\"lightgrey\" draggable onDragStart={this.handleDragStart}\n    onDragEnd={this.handleDragEnd}shadowBlur={1} />\n\n        </Layer>\n    )\n  }\n}\n\n\nexport default ToolBar"]},"metadata":{},"sourceType":"module"}