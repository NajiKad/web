{"ast":null,"code":"var _jsxFileName = \"/home/jcryuu/cscd488/newRepo/web/inavig8-admin/src/components/Login.js\";\nimport React from 'react';\nimport './Login.css';\nimport Auth from '@aws-amplify/auth';\nimport Amplify from '@aws-amplify/core';\nAmplify.configure({\n  Auth: {\n    // REQUIRED - Amazon Cognito Region\n    region: 'us-west-2',\n    // OPTIONAL - Amazon Cognito Federated Identity Pool Region \n    // Required only if it's different from Amazon Cognito Region\n    identityPoolRegion: 'us-west-2',\n    // OPTIONAL - Amazon Cognito User Pool ID\n    userPoolId: 'us-west-2_x1nV7VStG4',\n    // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n    userPoolWebClientId: '7qismhftk1ehili7a4qp9cc5el',\n    // OPTIONAL - Manually set the authentication flow type. Default is 'USER_SRP_AUTH'\n    authenticationFlowType: 'USER_PASSWORD_AUTH'\n  }\n});\n\nclass Login extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.usernameRef = React.createRef();\n    this.passwordRef = React.createRef();\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const user = {\n        username: this.usernameRef.current.value,\n        password: this.passwordRef.current.value\n      };\n      var username = user.username;\n      var password = user.password;\n      var validationData = {}; // For advanced usage\n      // You can pass an object which has the username, password and validationData which is sent to a PreAuthentication Lambda trigger\n\n      Auth.signIn({\n        username,\n        // Required, the username\n        password,\n        // Optional, the password\n        validationData // Optional, a random key-value pair map which can contain any key and will be passed to your PreAuthentication Lambda trigger as-is. It can be used to implement additional validations around authentication\n\n      }).then(user => {\n        console.log(\"user:... \", user);\n        return this.props.onLogin(user);\n      }).catch(err => console.log(err)); // this.props.onLogin(user);\n      // reset form\n\n      e.currentTarget.reset();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      className: \"main-login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"login-box1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"sign in to iNavig8\"), React.createElement(\"img\", {\n      id: \"lg-login-icon\",\n      src: \"./img/icons/Login-Icon.png\",\n      alt: \"Login Icon\",\n      title: \"Login Icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"login-icons\",\n      src: \"./img/icons/username-icon.png\",\n      alt: \"username-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"username\",\n      name: \"username\",\n      placeholder: \"username\",\n      ref: this.usernameRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"login-area\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"login-icons\",\n      src: \"./img/icons/password-icon.png\",\n      alt: \"password-icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      name: \"password\",\n      placeholder: \"password\",\n      ref: this.passwordRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/forgot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"forgot password?\")), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"sign in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"register\"))), React.createElement(\"section\", {\n      className: \"title-box1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"indoor\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"navigation\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"system\"), React.createElement(\"img\", {\n      src: \"./img/icons/location-icon.png\",\n      alt: \"Location Icon\",\n      title: \"Location Icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/jcryuu/cscd488/newRepo/web/inavig8-admin/src/components/Login.js"],"names":["React","Auth","Amplify","configure","region","identityPoolRegion","userPoolId","userPoolWebClientId","authenticationFlowType","Login","Component","usernameRef","createRef","passwordRef","onSubmit","e","preventDefault","user","username","current","value","password","validationData","signIn","then","console","log","props","onLogin","catch","err","currentTarget","reset","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Login.css';\n\nimport Auth from '@aws-amplify/auth';\nimport Amplify from '@aws-amplify/core';\n\nAmplify.configure({\n    Auth: {\n        // REQUIRED - Amazon Cognito Region\n        region: 'us-west-2',\n\n        // OPTIONAL - Amazon Cognito Federated Identity Pool Region \n        // Required only if it's different from Amazon Cognito Region\n        identityPoolRegion: 'us-west-2',\n\n        // OPTIONAL - Amazon Cognito User Pool ID\n        userPoolId: 'us-west-2_x1nV7VStG4',\n\n        // OPTIONAL - Amazon Cognito Web Client ID (26-char alphanumeric string)\n        userPoolWebClientId: '7qismhftk1ehili7a4qp9cc5el',\n\n        // OPTIONAL - Manually set the authentication flow type. Default is 'USER_SRP_AUTH'\n        authenticationFlowType: 'USER_PASSWORD_AUTH',\n    }\n});\n\nclass Login extends React.Component {\n\n    usernameRef = React.createRef();\n    passwordRef = React.createRef();\n\n    onSubmit = (e) => {\n\n        e.preventDefault();\n\n        const user = {\n            username: this.usernameRef.current.value,\n            password: this.passwordRef.current.value,\n        };\n        var username = user.username;\n        var password = user.password;\n        var validationData = {};\n\n        // For advanced usage\n        // You can pass an object which has the username, password and validationData which is sent to a PreAuthentication Lambda trigger\n        Auth.signIn({\n            username, // Required, the username\n            password, // Optional, the password\n            validationData // Optional, a random key-value pair map which can contain any key and will be passed to your PreAuthentication Lambda trigger as-is. It can be used to implement additional validations around authentication\n        }).then(user => {\n            console.log(\"user:... \", user);\n            return this.props.onLogin(user);\n        })\n        .catch(err => console.log(err));\n\n        // this.props.onLogin(user);\n\n        // reset form\n        e.currentTarget.reset();\n    }\n\n    render() {\n\n        return (\n\n            <div className=\"container-login\">\n\n                <main className=\"main-login\">\n\n                    <section className=\"login-box1\">\n                        <h2>sign in to iNavig8</h2>\n                        <img id=\"lg-login-icon\" src=\"./img/icons/Login-Icon.png\" alt=\"Login Icon\" title=\"Login Icon\"/>\n                        <form className=\"\" onSubmit={this.onSubmit}>\n                            <div className=\"login-area\">\n                                <img className=\"login-icons\" src=\"./img/icons/username-icon.png\" alt=\"username-icon\" />\n                                <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"username\" ref={this.usernameRef} />\n                            </div>\n                            <div className=\"login-area\">\n                                <img className=\"login-icons\" src=\"./img/icons/password-icon.png\" alt=\"password-icon\" />\n                                <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"password\" ref={this.passwordRef} />\n                            </div>\n                            <p><a href=\"/forgot\">forgot password?</a></p>\n                            <input type=\"submit\" className=\"button\" value=\"sign in\" />\n                            <a href = \"/register\" >register</a>\n                        </form>\n                    </section>\n\n                    <section className=\"title-box1\">\n                        <h3>indoor</h3>\n                        <h3>navigation</h3>\n                        <h3>system</h3>\n                        <img src=\"./img/icons/location-icon.png\" alt=\"Location Icon\" title=\"Location Icon\"/>               \n                    </section>\n                    \n                </main>\n\n            </div>\n\n        )\n\n    }\n\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}