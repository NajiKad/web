{"ast":null,"code":"var _jsxFileName = \"/Users/valdyn/Dropbox/inavig8-admin/src/components/header.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  render() {\n    var width = window.innerWidth;\n    var height = window.innerHeight;\n    var tween = null;\n\n    function addStar(layer, stage) {\n      var scale = Math.random();\n      var star = new Konva.Star({\n        x: Math.random() * stage.getWidth(),\n        y: Math.random() * stage.getHeight(),\n        numPoints: 5,\n        innerRadius: 30,\n        outerRadius: 50,\n        fill: \"#89b717\",\n        opacity: 0.8,\n        draggable: true,\n        scale: {\n          x: scale,\n          y: scale\n        },\n        rotation: Math.random() * 180,\n        shadowColor: \"black\",\n        shadowBlur: 10,\n        shadowOffset: {\n          x: 5,\n          y: 5\n        },\n        shadowOpacity: 0.6,\n        // custom attribute\n        startScale: scale\n      });\n      layer.add(star);\n    }\n\n    var stage = new Konva.Stage({\n      container: \"container\",\n      width: width,\n      height: height\n    });\n    var layer = new Konva.Layer();\n    var dragLayer = new Konva.Layer();\n\n    for (var n = 0; n < 30; n++) {\n      addStar(layer, stage);\n    }\n\n    stage.add(layer, dragLayer);\n    stage.on(\"dragstart\", function (evt) {\n      var shape = evt.target; // moving to another layer will improve dragging performance\n\n      shape.moveTo(dragLayer);\n      stage.draw();\n\n      if (tween) {\n        tween.pause();\n      }\n\n      shape.setAttrs({\n        shadowOffset: {\n          x: 15,\n          y: 15\n        },\n        scale: {\n          x: shape.getAttr(\"startScale\") * 1.2,\n          y: shape.getAttr(\"startScale\") * 1.2\n        }\n      });\n    });\n    stage.on(\"dragend\", function (evt) {\n      var shape = evt.target;\n      shape.moveTo(layer);\n      stage.draw();\n      shape.to({\n        duration: 0.5,\n        easing: Konva.Easings.ElasticEaseOut,\n        scaleX: shape.getAttr(\"startScale\"),\n        scaleY: shape.getAttr(\"startScale\"),\n        shadowOffsetX: 5,\n        shadowOffsetY: 5\n      });\n    });\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      bg: \"light\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Navbar.Brand, {\n      href: \"#index\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"\",\n      src: \"/logo.png\",\n      width: \"50\",\n      height: \"40\",\n      className: \"d-inline-block align-middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), ' ', \"iNavig8\"), React.createElement(Form, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      type: \"text\",\n      placeholder: \"Search\",\n      className: \"mr-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outline-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Search\"))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/valdyn/Dropbox/inavig8-admin/src/components/header.js"],"names":["React","Navbar","Form","FormControl","Button","Header","Component","constructor","state","render","width","window","innerWidth","height","innerHeight","tween","addStar","layer","stage","scale","Math","random","star","Konva","Star","x","getWidth","y","getHeight","numPoints","innerRadius","outerRadius","fill","opacity","draggable","rotation","shadowColor","shadowBlur","shadowOffset","shadowOpacity","startScale","add","Stage","container","Layer","dragLayer","n","on","evt","shape","target","moveTo","draw","pause","setAttrs","getAttr","to","duration","easing","Easings","ElasticEaseOut","scaleX","scaleY","shadowOffsetX","shadowOffsetY"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kCAAP;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,EAAoCC,MAApC,QAAkD,iBAAlD;;AAIA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AAEnCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAIX,QAAIC,KAAK,GAAGC,MAAM,CAACC,UAAnB;AACA,QAAIC,MAAM,GAAGF,MAAM,CAACG,WAApB;AAEA,QAAIC,KAAK,GAAG,IAAZ;;AAEA,aAASC,OAAT,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;AAC7B,UAAIC,KAAK,GAAGC,IAAI,CAACC,MAAL,EAAZ;AAEA,UAAIC,IAAI,GAAG,IAAIC,KAAK,CAACC,IAAV,CAAe;AACxBC,QAAAA,CAAC,EAAEL,IAAI,CAACC,MAAL,KAAgBH,KAAK,CAACQ,QAAN,EADK;AAExBC,QAAAA,CAAC,EAAEP,IAAI,CAACC,MAAL,KAAgBH,KAAK,CAACU,SAAN,EAFK;AAGxBC,QAAAA,SAAS,EAAE,CAHa;AAIxBC,QAAAA,WAAW,EAAE,EAJW;AAKxBC,QAAAA,WAAW,EAAE,EALW;AAMxBC,QAAAA,IAAI,EAAE,SANkB;AAOxBC,QAAAA,OAAO,EAAE,GAPe;AAQxBC,QAAAA,SAAS,EAAE,IARa;AASxBf,QAAAA,KAAK,EAAE;AACLM,UAAAA,CAAC,EAAEN,KADE;AAELQ,UAAAA,CAAC,EAAER;AAFE,SATiB;AAaxBgB,QAAAA,QAAQ,EAAEf,IAAI,CAACC,MAAL,KAAgB,GAbF;AAcxBe,QAAAA,WAAW,EAAE,OAdW;AAexBC,QAAAA,UAAU,EAAE,EAfY;AAgBxBC,QAAAA,YAAY,EAAE;AACZb,UAAAA,CAAC,EAAE,CADS;AAEZE,UAAAA,CAAC,EAAE;AAFS,SAhBU;AAoBxBY,QAAAA,aAAa,EAAE,GApBS;AAqBxB;AACAC,QAAAA,UAAU,EAAErB;AAtBY,OAAf,CAAX;AAyBAF,MAAAA,KAAK,CAACwB,GAAN,CAAUnB,IAAV;AACD;;AACD,QAAIJ,KAAK,GAAG,IAAIK,KAAK,CAACmB,KAAV,CAAgB;AAC1BC,MAAAA,SAAS,EAAE,WADe;AAE1BjC,MAAAA,KAAK,EAAEA,KAFmB;AAG1BG,MAAAA,MAAM,EAAEA;AAHkB,KAAhB,CAAZ;AAMA,QAAII,KAAK,GAAG,IAAIM,KAAK,CAACqB,KAAV,EAAZ;AACA,QAAIC,SAAS,GAAG,IAAItB,KAAK,CAACqB,KAAV,EAAhB;;AAEA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B9B,MAAAA,OAAO,CAACC,KAAD,EAAQC,KAAR,CAAP;AACD;;AAEDA,IAAAA,KAAK,CAACuB,GAAN,CAAUxB,KAAV,EAAiB4B,SAAjB;AAEA3B,IAAAA,KAAK,CAAC6B,EAAN,CAAS,WAAT,EAAsB,UAASC,GAAT,EAAc;AAClC,UAAIC,KAAK,GAAGD,GAAG,CAACE,MAAhB,CADkC,CAElC;;AACAD,MAAAA,KAAK,CAACE,MAAN,CAAaN,SAAb;AACA3B,MAAAA,KAAK,CAACkC,IAAN;;AAEA,UAAIrC,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACsC,KAAN;AACD;;AACDJ,MAAAA,KAAK,CAACK,QAAN,CAAe;AACbhB,QAAAA,YAAY,EAAE;AACZb,UAAAA,CAAC,EAAE,EADS;AAEZE,UAAAA,CAAC,EAAE;AAFS,SADD;AAKbR,QAAAA,KAAK,EAAE;AACLM,UAAAA,CAAC,EAAEwB,KAAK,CAACM,OAAN,CAAc,YAAd,IAA8B,GAD5B;AAEL5B,UAAAA,CAAC,EAAEsB,KAAK,CAACM,OAAN,CAAc,YAAd,IAA8B;AAF5B;AALM,OAAf;AAUD,KAnBD;AAqBArC,IAAAA,KAAK,CAAC6B,EAAN,CAAS,SAAT,EAAoB,UAASC,GAAT,EAAc;AAChC,UAAIC,KAAK,GAAGD,GAAG,CAACE,MAAhB;AACAD,MAAAA,KAAK,CAACE,MAAN,CAAalC,KAAb;AACAC,MAAAA,KAAK,CAACkC,IAAN;AACAH,MAAAA,KAAK,CAACO,EAAN,CAAS;AACPC,QAAAA,QAAQ,EAAE,GADH;AAEPC,QAAAA,MAAM,EAAEnC,KAAK,CAACoC,OAAN,CAAcC,cAFf;AAGPC,QAAAA,MAAM,EAAEZ,KAAK,CAACM,OAAN,CAAc,YAAd,CAHD;AAIPO,QAAAA,MAAM,EAAEb,KAAK,CAACM,OAAN,CAAc,YAAd,CAJD;AAKPQ,QAAAA,aAAa,EAAE,CALR;AAMPC,QAAAA,aAAa,EAAE;AANR,OAAT;AAQD,KAZD;AAgBI,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,OAAO,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,EADN;AAEE,MAAA,GAAG,EAAC,WAFN;AAGE,MAAA,KAAK,EAAC,IAHR;AAIE,MAAA,MAAM,EAAC,IAJT;AAKE,MAAA,SAAS,EAAC,6BALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOK,GAPL,YAFF,EAaE,oBAAC,IAAD;AAAM,MAAA,MAAM,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,MAAlB;AAAyB,MAAA,WAAW,EAAC,QAArC;AAA8C,MAAA,SAAS,EAAC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAbF,CADF,CADF;AAuBD;;AAzHkC;;AA6HrC,eAAe3D,MAAf","sourcesContent":["import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Navbar, Form, FormControl, Button } from 'react-bootstrap';\n\n\n\nclass Header extends React.Component {\n  \n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  render() {\n\n\n\nvar width = window.innerWidth;\nvar height = window.innerHeight;\n\nvar tween = null;\n\nfunction addStar(layer, stage) {\n  var scale = Math.random();\n\n  var star = new Konva.Star({\n    x: Math.random() * stage.getWidth(),\n    y: Math.random() * stage.getHeight(),\n    numPoints: 5,\n    innerRadius: 30,\n    outerRadius: 50,\n    fill: \"#89b717\",\n    opacity: 0.8,\n    draggable: true,\n    scale: {\n      x: scale,\n      y: scale\n    },\n    rotation: Math.random() * 180,\n    shadowColor: \"black\",\n    shadowBlur: 10,\n    shadowOffset: {\n      x: 5,\n      y: 5\n    },\n    shadowOpacity: 0.6,\n    // custom attribute\n    startScale: scale\n  });\n\n  layer.add(star);\n}\nvar stage = new Konva.Stage({\n  container: \"container\",\n  width: width,\n  height: height\n});\n\nvar layer = new Konva.Layer();\nvar dragLayer = new Konva.Layer();\n\nfor (var n = 0; n < 30; n++) {\n  addStar(layer, stage);\n}\n\nstage.add(layer, dragLayer);\n\nstage.on(\"dragstart\", function(evt) {\n  var shape = evt.target;\n  // moving to another layer will improve dragging performance\n  shape.moveTo(dragLayer);\n  stage.draw();\n\n  if (tween) {\n    tween.pause();\n  }\n  shape.setAttrs({\n    shadowOffset: {\n      x: 15,\n      y: 15\n    },\n    scale: {\n      x: shape.getAttr(\"startScale\") * 1.2,\n      y: shape.getAttr(\"startScale\") * 1.2\n    }\n  });\n});\n\nstage.on(\"dragend\", function(evt) {\n  var shape = evt.target;\n  shape.moveTo(layer);\n  stage.draw();\n  shape.to({\n    duration: 0.5,\n    easing: Konva.Easings.ElasticEaseOut,\n    scaleX: shape.getAttr(\"startScale\"),\n    scaleY: shape.getAttr(\"startScale\"),\n    shadowOffsetX: 5,\n    shadowOffsetY: 5\n  });\n});\n\n\n\n    return (\n      <div className=\"header\">\n        <Navbar bg=\"light\" variant=\"light\" >\n\n          <Navbar.Brand href=\"#index\">\n            <img\n              alt=\"\"\n              src=\"/logo.png\"\n              width=\"50\"\n              height=\"40\"\n              className=\"d-inline-block align-middle\"\n            />{' '}\n            iNavig8\n          </Navbar.Brand>\n\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n\n        </Navbar>\n      </div>\n    )\n  }\n}\n  \n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}